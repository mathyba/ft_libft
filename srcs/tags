!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
base_len	numbers/ft_base_to_deci.c	/^int				base_len(unsigned int num, int base)$/;"	f
fill_tab	strings/ft_strsplit.c	/^static char	**fill_tab(char **tab, char *str, size_t nb_words, int c)$/;"	f	file:
ft_44maddd	vectors_matrices/ft_44maddd.c	/^void	ft_44maddd(double (*m)[4][4], double val)$/;"	f
ft_44maddrows	vectors_matrices/ft_44maddrows.c	/^void	ft_44maddrows(double (*m)[4][4], int row_dest, int row_add)$/;"	f
ft_44mcpy	vectors_matrices/ft_44mcpy.c	/^void		ft_44mcpy(double (*dest)[4][4], double (src)[4][4])$/;"	f
ft_44minit	vectors_matrices/ft_44minit.c	/^void		ft_44minit(double (*m)[4][4], int val)$/;"	f
ft_44mrow_addd	vectors_matrices/ft_44mrow_addd.c	/^void	ft_44mrow_addd(double (*m)[4][4], int row, double val)$/;"	f
ft_44mswap_rows	vectors_matrices/ft_44mswap_rows.c	/^void	ft_44mswap_rows(double (*m)[4][4], int r1, int r2)$/;"	f
ft_44mtranspose	vectors_matrices/ft_44mtranspose.c	/^void		ft_44mtranspose(double (*m)[4][4])$/;"	f
ft_44mtrxmtrx_mul	vectors_matrices/ft_44mtrxmtrx_mul.c	/^void	ft_44mtrxmtrx_mul(double (*dest)[4][4], double m1[4][4],$/;"	f
ft_4fvcpy	vectors_matrices/ft_4fvcpy.c	/^void		ft_4fvcpy(t_4fvect *dest, t_4fvect src)$/;"	f
ft_4fvinit	vectors_matrices/ft_4fvinit.c	/^void	ft_4fvinit(t_4fvect *v, float x, float y, float z)$/;"	f
ft_4ivcpy	vectors_matrices/ft_4ivcpy.c	/^void		ft_4ivcpy(t_4ivect *dest, t_4ivect src)$/;"	f
ft_4ivinit	vectors_matrices/ft_4ivinit.c	/^void	ft_4ivinit(t_4ivect *v, int x, int y, int z)$/;"	f
ft_4mtrxvect_mul	vectors_matrices/ft_4mtrxvect_mul.c	/^t_4vect		ft_4mtrxvect_mul(double (*m)[4][4], t_4vect *ver)$/;"	f
ft_4vcpy	vectors_matrices/ft_4vcpy.c	/^void		ft_4vcpy(t_4vect *dest, t_4vect src)$/;"	f
ft_4vectvect_mul	vectors_matrices/ft_4vectvect_mul.c	/^double		ft_4vectvect_mul(t_4vect hor, t_4vect ver)$/;"	f
ft_4vinit	vectors_matrices/ft_4vinit.c	/^void	ft_4vinit(t_4vect *v, double x, double y, double z)$/;"	f
ft_abs	numbers/ft_abs.c	/^size_t		ft_abs(int n)$/;"	f
ft_add_prefix_hex	output/ft_printf/add_prefix.c	/^void	ft_add_prefix_hex(t_env *env)$/;"	f
ft_add_prefix_oct	output/ft_printf/add_prefix.c	/^void	ft_add_prefix_oct(t_env *env)$/;"	f
ft_add_prefix_ptr	output/ft_printf/add_prefix.c	/^void	ft_add_prefix_ptr(t_env *env)$/;"	f
ft_add_prefix_uns	output/ft_printf/add_prefix.c	/^void	ft_add_prefix_uns(t_env *env)$/;"	f
ft_addsign_nozero	output/ft_printf/add_sign.c	/^void	ft_addsign_nozero(t_env *env)$/;"	f
ft_addsign_wzero	output/ft_printf/add_sign.c	/^void	ft_addsign_wzero(t_env *env)$/;"	f
ft_addtobuf	output/ft_printf/add_to_buffer.c	/^void	ft_addtobuf(t_env *env, char c, int times)$/;"	f
ft_addtobuf_field	output/ft_printf/add_to_buffer.c	/^void	ft_addtobuf_field(t_env *env, char c, int times)$/;"	f
ft_addtobuf_prec	output/ft_printf/add_to_buffer.c	/^void	ft_addtobuf_prec(t_env *env, char c, int times)$/;"	f
ft_addtobuf_switch	output/ft_printf/add_to_buffer.c	/^void	ft_addtobuf_switch(t_env *env, int times)$/;"	f
ft_apply_specs_char	output/ft_printf/apply_specs_cs.c	/^void	ft_apply_specs_char(t_env *env)$/;"	f
ft_apply_specs_hex	output/ft_printf/apply_specs.c	/^void			ft_apply_specs_hex(t_env *env)$/;"	f
ft_apply_specs_int	output/ft_printf/apply_specs.c	/^void			ft_apply_specs_int(t_env *env)$/;"	f
ft_apply_specs_oct	output/ft_printf/apply_specs.c	/^void			ft_apply_specs_oct(t_env *env)$/;"	f
ft_apply_specs_ptr	output/ft_printf/apply_specs.c	/^void			ft_apply_specs_ptr(t_env *env)$/;"	f
ft_apply_specs_str	output/ft_printf/apply_specs_cs.c	/^void	ft_apply_specs_str(t_env *env)$/;"	f
ft_apply_specs_uns	output/ft_printf/apply_specs.c	/^void			ft_apply_specs_uns(t_env *env)$/;"	f
ft_apply_specs_wcs	output/ft_printf/apply_specs_cs.c	/^void	ft_apply_specs_wcs(t_env *env)$/;"	f
ft_atoi	conversion/ft_atoi.c	/^int			ft_atoi(const char *nptr)$/;"	f
ft_atoi_index	conversion/ft_atoi_index.c	/^int			ft_atoi_index(unsigned char *str, int *count)$/;"	f
ft_b	output/ft_printf/ft_b.c	/^void	ft_b(t_env *env, char *format, va_list ap)$/;"	f
ft_base_to_deci	numbers/ft_base_to_deci.c	/^unsigned int	ft_base_to_deci(unsigned int num, int base)$/;"	f
ft_beyond_limiti	numbers/ft_beyond_limiti.c	/^int				ft_beyond_limiti(char *str)$/;"	f
ft_bigc	output/ft_printf/ft_bigc.c	/^void	ft_bigc(t_env *env, char *format, va_list ap)$/;"	f
ft_bigd	output/ft_printf/ft_bigd.c	/^void	ft_bigd(t_env *env, char *format, va_list ap)$/;"	f
ft_bigo	output/ft_printf/ft_bigo.c	/^void	ft_bigo(t_env *env, char *format, va_list ap)$/;"	f
ft_bigs	output/ft_printf/ft_bigs.c	/^void		ft_bigs(t_env *env, char *format, va_list ap)$/;"	f
ft_bigu	output/ft_printf/ft_bigu.c	/^void	ft_bigu(t_env *env, char *format, va_list ap)$/;"	f
ft_bigx	output/ft_printf/ft_bigx.c	/^void	ft_bigx(t_env *env, char *format, va_list ap)$/;"	f
ft_bzero	memory/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_c	output/ft_printf/ft_c.c	/^void	ft_c(t_env *env, char *format, va_list ap)$/;"	f
ft_check_and_mask	output/ft_printf/unicode.c	/^static int			ft_check_and_mask(t_env *env, int *n, int *bytes)$/;"	f	file:
ft_check_color	output/ft_printf/colors.c	/^int			ft_check_color(t_env *env, char *str, va_list ap)$/;"	f
ft_check_list	output/ft_printf/colors.c	/^static int	ft_check_list(t_env *env, char *colors[], char *codes[], char *str)$/;"	f	file:
ft_check_output	output/ft_printf/colors.c	/^static int	ft_check_output(t_env *env, unsigned char **c, char *s, va_list ap)$/;"	f	file:
ft_clear_form	output/ft_printf/init_or_clear.c	/^int			ft_clear_form(t_env *env)$/;"	f
ft_compare	strings/ft_strnstr.c	/^static char	*ft_compare(char *haystack, char *needle, size_t len)$/;"	f	file:
ft_convert	output/ft_printf/ft_printf.c	/^static int	ft_convert(void (*tab[128])(t_env *env, char *format, va_list ap),$/;"	f	file:
ft_convert_wc	output/ft_printf/ft_bigs.c	/^void		ft_convert_wc(t_env *env, int len)$/;"	f
ft_d	output/ft_printf/ft_d.c	/^void	ft_d(t_env *env, char *format, va_list ap)$/;"	f
ft_dabs	numbers/ft_dabs.c	/^double	ft_dabs(double num)$/;"	f
ft_destroy_tree	lists/ft_destroy_tree.c	/^void	ft_destroy_tree(t_lbtree *tree)$/;"	f
ft_display_error	output/ft_display_error.c	/^int		ft_display_error(char *msg)$/;"	f
ft_dsqrt	numbers/ft_dsqrt.c	/^double		ft_dsqrt(double num)$/;"	f
ft_endien_btl	numbers/ft_endien_btl.c	/^size_t		ft_endien_btl(size_t valbe)$/;"	f
ft_endn	output/ft_printf/ft_printf.c	/^int			ft_endn(t_env *env, unsigned char *str)$/;"	f
ft_fabs	numbers/ft_fabs.c	/^float		ft_fabs(float num)$/;"	f
ft_get4mcol	vectors_matrices/ft_get4mcol.c	/^t_4vect		ft_get4mcol(double m[4][4], int col)$/;"	f
ft_get4mrow	vectors_matrices/ft_get4mrow.c	/^t_4vect		ft_get4mrow(double m[4][4], int row)$/;"	f
ft_get_strtabsize	numbers/ft_get_strtabsize.c	/^int	ft_get_strtabsize(char **str)$/;"	f
ft_getmval	vectors_matrices/ft_getmval.c	/^double		ft_getmval(double m[4][4], int row, int col)$/;"	f
ft_i	output/ft_printf/ft_i.c	/^void	ft_i(t_env *env, char *format, va_list ap)$/;"	f
ft_ilistnew	lists/ft_ilstnew.c	/^t_ilist		*ft_ilistnew(int val)$/;"	f
ft_ilstadd	lists/ft_ilstadd.c	/^void		ft_ilstadd(t_ilist **alst, t_ilist *new)$/;"	f
ft_init_fttab	output/ft_printf/init_or_clear.c	/^void		ft_init_fttab($/;"	f
ft_inth	output/ft_printf/getarg_int.c	/^void	ft_inth(t_env *env, va_list ap)$/;"	f
ft_inthh	output/ft_printf/getarg_int.c	/^void	ft_inthh(t_env *env, va_list ap)$/;"	f
ft_intj	output/ft_printf/getarg_int.c	/^void	ft_intj(t_env *env, va_list ap)$/;"	f
ft_intl	output/ft_printf/getarg_int.c	/^void	ft_intl(t_env *env, va_list ap)$/;"	f
ft_intllz	output/ft_printf/getarg_int.c	/^void	ft_intllz(t_env *env, va_list ap)$/;"	f
ft_intnone	output/ft_printf/getarg_nomod.c	/^void	ft_intnone(t_env *env, va_list ap)$/;"	f
ft_is_flag	output/ft_printf/attributes_tools.c	/^int		ft_is_flag(unsigned char c)$/;"	f
ft_is_mod	output/ft_printf/attributes_tools.c	/^int		ft_is_mod(unsigned char c)$/;"	f
ft_isalnum	chars/ft_isalnum.c	/^int		ft_isalnum(int c)$/;"	f
ft_isalpha	chars/ft_isalpha.c	/^int		ft_isalpha(int c)$/;"	f
ft_isascii	chars/ft_isascii.c	/^int		ft_isascii(int c)$/;"	f
ft_isdigit	chars/ft_isdigit.c	/^int		ft_isdigit(int c)$/;"	f
ft_isgraph	chars/ft_isgraph.c	/^int	ft_isgraph(int c)$/;"	f
ft_islower	chars/ft_islower.c	/^int	ft_islower(int c)$/;"	f
ft_ispowtwo	numbers/ft_ispowtwo.c	/^int		ft_ispowtwo(int n)$/;"	f
ft_isprint	chars/ft_isprint.c	/^int		ft_isprint(int c)$/;"	f
ft_ispunct	chars/ft_ispunct.c	/^int	ft_ispunct(int c)$/;"	f
ft_isspace	chars/ft_isspace.c	/^int		ft_isspace(int c)$/;"	f
ft_isupper	chars/ft_isupper.c	/^int	ft_isupper(int c)$/;"	f
ft_isxdigit	chars/ft_isxdigit.c	/^int	ft_isxdigit(int c)$/;"	f
ft_itoa	conversion/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f
ft_itoa_base_cust	output/ft_printf/ft_itoa_base_cust.c	/^void		ft_itoa_base_cust(t_env *env, unsigned char *str, int num)$/;"	f
ft_itoa_mod	conversion/ft_itoa_mod.c	/^void		ft_itoa_mod(char str[], int num)$/;"	f
ft_llabs	numbers/ft_llabs.c	/^long long		ft_llabs(long long n)$/;"	f
ft_lllen	numbers/ft_lllen.c	/^size_t		ft_lllen(long long n)$/;"	f
ft_llnblen	output/ft_printf/nblen.c	/^int		ft_llnblen(long long num, int base)$/;"	f
ft_llpow	numbers/ft_llpow.c	/^long long	ft_llpow(long long n, int pow)$/;"	f
ft_lltoa	conversion/ft_lltoa.c	/^char	*ft_lltoa(long long n)$/;"	f
ft_lltoa_base_cust	output/ft_printf/itoa_cust_var.c	/^void	ft_lltoa_base_cust(t_env *env, unsigned char *s, long long int num)$/;"	f
ft_lstadd	lists/ft_lstadd.c	/^void	ft_lstadd(t_list **alst, t_list *new)$/;"	f
ft_lstaddend	lists/ft_lstaddend.c	/^void	ft_lstaddend(t_list **alst, t_list *new)$/;"	f
ft_lstdel	lists/ft_lstdel.c	/^void	ft_lstdel(t_list **alst, void (*del)(void *, size_t))$/;"	f
ft_lstdelone	lists/ft_lstdelone.c	/^void	ft_lstdelone(t_list **alst, void (*del)(void *, size_t))$/;"	f
ft_lstget_last	lists/ft_lstget_last.c	/^t_list	*ft_lstget_last(t_list *lst)$/;"	f
ft_lstiter	lists/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *elem))$/;"	f
ft_lstmap	lists/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))$/;"	f
ft_lstnew	lists/ft_lstnew.c	/^t_list	*ft_lstnew(void const *content, size_t content_size)$/;"	f
ft_lstnewf	lists/ft_lstnewf.c	/^t_list	*ft_lstnewf(void const *content, size_t content_size)$/;"	f
ft_ltoa_base_cust	output/ft_printf/itoa_cust_var.c	/^void	ft_ltoa_base_cust(t_env *env, unsigned char *str, long int num)$/;"	f
ft_maxint	numbers/ft_maxint.c	/^int		ft_maxint(int a, int b)$/;"	f
ft_mdisplay	output/ft_mdisplay.c	/^void		ft_mdisplay(double (*m)[4][4])$/;"	f
ft_memalloc	memory/ft_memalloc.c	/^void	*ft_memalloc(size_t size)$/;"	f
ft_memccpy	memory/ft_memccpy.c	/^void	*ft_memccpy(void *dst, const void *src, int c, size_t n)$/;"	f
ft_memchr	memory/ft_memchr.c	/^void		*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	memory/ft_memcmp.c	/^int		ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	memory/ft_memcpy.c	/^void		*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memdel	memory/ft_memdel.c	/^void	ft_memdel(void **ap)$/;"	f
ft_memmove	memory/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	memory/ft_memset.c	/^void				*ft_memset(void *str, int c, size_t len)$/;"	f
ft_mng_flags	output/ft_printf/attributes_tools.c	/^void	ft_mng_flags(t_env *env)$/;"	f
ft_mng_negative_arg	output/ft_printf/negative_arg.c	/^void	ft_mng_negative_arg(t_env *env, long long int *num)$/;"	f
ft_mng_nullarg	output/ft_printf/ft_itoa_base_cust.c	/^static void	ft_mng_nullarg(t_env *env, int *num)$/;"	f	file:
ft_mng_nullarg	output/ft_printf/ft_s.c	/^static void	ft_mng_nullarg(t_env *env, int *n)$/;"	f	file:
ft_mng_unicode_err	output/ft_printf/unicode.c	/^static int			ft_mng_unicode_err(t_env *env, int bytes)$/;"	f	file:
ft_n	output/ft_printf/ft_n.c	/^void	ft_n(t_env *env, char *format, va_list ap)$/;"	f
ft_nblen	numbers/ft_nblen.c	/^size_t		ft_nblen(int n, int base)$/;"	f
ft_nbwords	numbers/ft_nbwords.c	/^size_t		ft_nbwords(char *str, int sep, int i)$/;"	f
ft_newnode	lists/ft_newnode.c	/^t_lbtree	*ft_newnode(void *content, int content_size)$/;"	f
ft_noconv	output/ft_printf/ft_noconv.c	/^void			ft_noconv(t_env *env, char *format, va_list ap)$/;"	f
ft_o	output/ft_printf/ft_o.c	/^void	ft_o(t_env *env, char *format, va_list ap)$/;"	f
ft_p	output/ft_printf/ft_p.c	/^void	ft_p(t_env *env, char *format, va_list ap)$/;"	f
ft_pow	numbers/ft_pow.c	/^int		ft_pow(int n, int pow)$/;"	f
ft_print_intarr	output/ft_print_inttab.c	/^void		ft_print_intarr(int *tab, int len)$/;"	f
ft_printbit	output/ft_printf/ft_printbit.c	/^void	ft_printbit(t_env *env, unsigned int n, int size)$/;"	f
ft_printf	output/ft_printf/ft_printf.c	/^int			ft_printf(const char *format, ...)$/;"	f
ft_printstrarr	output/ft_printstrarr.c	/^void		ft_printstrarr(char **arr)$/;"	f
ft_putchar	output/ft_putchar.c	/^void		ft_putchar(int c)$/;"	f
ft_putchar_fd	output/ft_putchar_fd.c	/^void	ft_putchar_fd(int c, int fd)$/;"	f
ft_putcnl	output/ft_putcnl.c	/^void	ft_putcnl(char c)$/;"	f
ft_putendl	output/ft_putendl.c	/^void	ft_putendl(char *s)$/;"	f
ft_putendl_fd	output/ft_putendl_fd.c	/^void	ft_putendl_fd(char const *s, int fd)$/;"	f
ft_putendl_uns	output/ft_putendl_uns.c	/^void	ft_putendl_uns(unsigned char *s)$/;"	f
ft_putinmask	output/ft_printf/unicode.c	/^static unsigned int	ft_putinmask(unsigned int n, int bytes)$/;"	f	file:
ft_putnbr	output/ft_putnbr.c	/^void	ft_putnbr(int n)$/;"	f
ft_putnbr_fd	output/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putnbrnl	output/ft_putnbrnl.c	/^void	ft_putnbrnl(int n)$/;"	f
ft_putstr	output/ft_putstr.c	/^void	ft_putstr(char *str)$/;"	f
ft_putstr_fd	output/ft_putstr_fd.c	/^void	ft_putstr_fd(char const *s, int fd)$/;"	f
ft_putwchar	output/ft_printf/unicode.c	/^unsigned int		ft_putwchar(t_env *env, int n)$/;"	f
ft_read_field	output/ft_printf/read_attributes.c	/^static void	ft_read_field(t_env *env, char **str)$/;"	f	file:
ft_read_flags	output/ft_printf/read_attributes.c	/^static int	ft_read_flags(t_env *env, char **str)$/;"	f	file:
ft_read_mod	output/ft_printf/read_attributes.c	/^static void	ft_read_mod(t_env *env, char **str)$/;"	f	file:
ft_read_precision	output/ft_printf/read_attributes.c	/^static void	ft_read_precision(t_env *env, char **str)$/;"	f	file:
ft_read_specs	output/ft_printf/read_attributes.c	/^int			ft_read_specs(t_env *env, char **str)$/;"	f
ft_read_until_arg	output/ft_printf/read_until_arg.c	/^int		ft_read_until_arg(t_env *env, unsigned char **s2, va_list ap)$/;"	f
ft_reset_color	output/ft_printf/colors.c	/^int			ft_reset_color(t_env *env)$/;"	f
ft_reset_index	output/ft_printf/ft_printf.c	/^void		ft_reset_index(t_env *env)$/;"	f
ft_s	output/ft_printf/ft_s.c	/^void		ft_s(t_env *env, char *format, va_list ap)$/;"	f
ft_setmask	output/ft_printf/unicode.c	/^static unsigned int	ft_setmask(unsigned int n, int bytes)$/;"	f	file:
ft_setzero	output/ft_printf/init_or_clear.c	/^void		ft_setzero(unsigned char str[], int len, char c)$/;"	f
ft_slstadd	lists/ft_slstadd.c	/^void	ft_slstadd(t_slist **alst, t_slist *new)$/;"	f
ft_slstnew	lists/ft_slstnew.c	/^t_slist		*ft_slstnew(char *str)$/;"	f
ft_sort_int_tab	numbers/ft_sort_int_tab.c	/^void	ft_sort_int_tab(int *tab, size_t size)$/;"	f
ft_sort_inttab_nodup	numbers/ft_sort_inttab_nodup.c	/^int		ft_sort_inttab_nodup(int *tab, size_t size)$/;"	f
ft_split_buff	strings/get_next_line.c	/^static char	*ft_split_buff(char *str, int option)$/;"	f	file:
ft_strarrlen	numbers/ft_strarrlen.c	/^int		ft_strarrlen(char **str)$/;"	f
ft_strcapitalize	output/ft_printf/attributes_tools.c	/^void	ft_strcapitalize(unsigned char *str)$/;"	f
ft_strcat	strings/ft_strcat.c	/^char	*ft_strcat(char *s1, const char *s2)$/;"	f
ft_strccat	strings/ft_strccat.c	/^char	*ft_strccat(char *s1, const char *s2, char c)$/;"	f
ft_strchr	strings/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strchri	strings/ft_strchri.c	/^int		ft_strchri(const char *s, int c, int i)$/;"	f
ft_strcjoin	strings/ft_strcjoin.c	/^char	*ft_strcjoin(char const *s1, char const *s2, char c)$/;"	f
ft_strclr	strings/ft_strclr.c	/^void	ft_strclr(char *s)$/;"	f
ft_strcmp	strings/ft_strcmp.c	/^int		ft_strcmp(const char *s1, const char *s2)$/;"	f
ft_strcpy	strings/ft_strcpy.c	/^char		*ft_strcpy(char *dst, const char *src)$/;"	f
ft_strcpyi_buf	output/ft_printf/ft_strncpyi.c	/^void	ft_strcpyi_buf(t_env *env, unsigned char src[], int *index)$/;"	f
ft_strcstr	strings/ft_strcstr.c	/^int		ft_strcstr(char *str, char *chars)$/;"	f
ft_strdel	strings/ft_strdel.c	/^void		ft_strdel(char **as)$/;"	f
ft_strdup	strings/ft_strdup.c	/^char	*ft_strdup(const char *src)$/;"	f
ft_strdupf	strings/ft_strdupf.c	/^char	*ft_strdupf(char *dest, const char *src, int to_free)$/;"	f
ft_strequ	strings/ft_strequ.c	/^int		ft_strequ(const char *s1, const char *s2)$/;"	f
ft_striter	strings/ft_striter.c	/^void	ft_striter(char *s, void (*f)(char *))$/;"	f
ft_striteri	strings/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f
ft_strjoin	strings/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strjoinf	strings/ft_strjoinf.c	/^char	*ft_strjoinf(char *s1, char *s2, int to_free)$/;"	f
ft_strjoinfree	strings/get_next_line.c	/^static char	*ft_strjoinfree(char *str, char *str2)$/;"	f	file:
ft_strlcat	strings/ft_strlcat.c	/^size_t		ft_strlcat(char *dst, const char *src, size_t size)$/;"	f
ft_strlen	strings/ft_strlen.c	/^size_t		ft_strlen(char *str)$/;"	f
ft_strmap	strings/ft_strmap.c	/^char	*ft_strmap(char const *s, char (*f)(char))$/;"	f
ft_strmapi	strings/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strnbc	strings/ft_strnbc.c	/^int		ft_strnbc(char *str, char c)$/;"	f
ft_strnbci	strings/ft_strnbci.c	/^int		ft_strnbci(char const *s, char c, int i)$/;"	f
ft_strncat	strings/ft_strncat.c	/^char		*ft_strncat(char *s1, const char *s2, size_t n)$/;"	f
ft_strnccat	strings/ft_strnccat.c	/^char		*ft_strnccat(char *s1, const char *s2, size_t n, char c)$/;"	f
ft_strncmp	strings/ft_strncmp.c	/^int		ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strncpy	strings/ft_strncpy.c	/^char		*ft_strncpy(char *dst, const char *src, size_t len)$/;"	f
ft_strncpyi_buf	output/ft_printf/ft_strncpyi.c	/^void	ft_strncpyi_buf(t_env *env, unsigned char src[], int *index, int n)$/;"	f
ft_strncpyi_tmp	output/ft_printf/ft_strncpyi.c	/^void	ft_strncpyi_tmp(t_env *env, unsigned char src[], int *index, int n)$/;"	f
ft_strncpyi_wbuf	output/ft_printf/ft_strncpyi.c	/^void	ft_strncpyi_wbuf(t_env *env, unsigned char src[], int *index, int n)$/;"	f
ft_strndup	strings/ft_strndup.c	/^char	*ft_strndup(const char *src, int n)$/;"	f
ft_strnequ	strings/ft_strnequ.c	/^int		ft_strnequ(const char *s1, const char *s2, size_t n)$/;"	f
ft_strnew	strings/ft_strnew.c	/^char	*ft_strnew(size_t size)$/;"	f
ft_strnstr	strings/ft_strnstr.c	/^char		*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	strings/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strrep	strings/ft_strrep.c	/^char		*ft_strrep(char *dst, const char *src)$/;"	f
ft_strsplit	strings/ft_strsplit.c	/^char		**ft_strsplit(char const *s, char c)$/;"	f
ft_strstr	strings/ft_strstr.c	/^char	*ft_strstr(const char *haystack, const char *needle)$/;"	f
ft_strsub	strings/ft_strsub.c	/^char	*ft_strsub(char const *s, unsigned int beg, size_t len)$/;"	f
ft_strsubf	strings/ft_strsubf.c	/^char	*ft_strsubf(char const *s, unsigned int beg, size_t len, char *to_free)$/;"	f
ft_strtabdel	memory/ft_strtabdel.c	/^void		ft_strtabdel(char ***tab)$/;"	f
ft_strtrim	strings/ft_strtrim.c	/^char		*ft_strtrim(char const *s)$/;"	f
ft_swap	numbers/ft_swap.c	/^void	ft_swap(int *a, int *b)$/;"	f
ft_swap4v	vectors_matrices/ft_swap4v.c	/^void		ft_swap4v(t_4vect *v1, t_4vect *v2)$/;"	f
ft_swapd	numbers/ft_swapd.c	/^void		ft_swapd(double *a, double *b)$/;"	f
ft_tolower	chars/ft_tolower.c	/^int		ft_tolower(int c)$/;"	f
ft_toupper	chars/ft_toupper.c	/^int		ft_toupper(int c)$/;"	f
ft_treeadd	lists/ft_treeadd.c	/^void	ft_treeadd(t_lbtree **tree, void *content,$/;"	f
ft_treedo_order	lists/ft_treedo_order.c	/^void		ft_treedo_order(t_lbtree *tree, void (*f)(t_lbtree *node))$/;"	f
ft_u	output/ft_printf/ft_u.c	/^void	ft_u(t_env *env, char *format, va_list ap)$/;"	f
ft_uitoa	conversion/ft_uitoa.c	/^char	*ft_uitoa(unsigned int n)$/;"	f
ft_uitoa_base_cust	output/ft_printf/itoa_cust_var.c	/^void	ft_uitoa_base_cust(t_env *env, unsigned char *str, unsigned int num)$/;"	f
ft_ullnblen	output/ft_printf/nblen.c	/^int		ft_ullnblen(unsigned long long num, int base)$/;"	f
ft_ulltoa_base_cust	output/ft_printf/itoa_cust_var.c	/^void	ft_ulltoa_base_cust(t_env *env, unsigned char *s, unsigned long long n)$/;"	f
ft_ultoa_base_cust	output/ft_printf/itoa_cust_var.c	/^void	ft_ultoa_base_cust(t_env *env, unsigned char *s, unsigned long int num)$/;"	f
ft_unblen	output/ft_printf/nblen.c	/^int		ft_unblen(unsigned int num, int base)$/;"	f
ft_unsh	output/ft_printf/getarg_uns.c	/^void	ft_unsh(t_env *env, va_list ap)$/;"	f
ft_unshh	output/ft_printf/getarg_uns.c	/^void	ft_unshh(t_env *env, va_list ap)$/;"	f
ft_unsj	output/ft_printf/getarg_uns.c	/^void	ft_unsj(t_env *env, va_list ap)$/;"	f
ft_unsl	output/ft_printf/getarg_uns.c	/^void	ft_unsl(t_env *env, va_list ap)$/;"	f
ft_unsll	output/ft_printf/getarg_uns.c	/^void	ft_unsll(t_env *env, va_list ap)$/;"	f
ft_unsnone	output/ft_printf/getarg_nomod.c	/^void	ft_unsnone(t_env *env, va_list ap)$/;"	f
ft_unsz	output/ft_printf/getarg_nomod.c	/^void	ft_unsz(t_env *env, va_list ap)$/;"	f
ft_x	output/ft_printf/ft_x.c	/^void	ft_x(t_env *env, char *format, va_list ap)$/;"	f
ftp_abs	output/ft_printf/ftp_abs.c	/^int		ftp_abs(int n)$/;"	f
ftp_isalpha	output/ft_printf/ftp_isalpha.c	/^int		ftp_isalpha(int c)$/;"	f
ftp_isdigit	output/ft_printf/ftp_isdigit.c	/^int		ftp_isdigit(int c)$/;"	f
ftp_maxint	output/ft_printf/ftp_maxint.c	/^int		ftp_maxint(int a, int b)$/;"	f
ftp_nblen	output/ft_printf/ftp_nblen.c	/^int		ftp_nblen(int n, int base)$/;"	f
ftp_strcmp	output/ft_printf/ftp_strcmp.c	/^int		ftp_strcmp(const char *s1, const char *s2)$/;"	f
ftp_strcstr	output/ft_printf/ftp_strcstr.c	/^int		ftp_strcstr(char *str, char *chars)$/;"	f
ftp_strequ	output/ft_printf/ftp_strequ.c	/^int		ftp_strequ(const char *s1, const char *s2)$/;"	f
ftp_strlen	output/ft_printf/ftp_strlen.c	/^size_t		ftp_strlen(char *str)$/;"	f
ftp_strncmp	output/ft_printf/ftp_strncmp.c	/^int		ftp_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ftp_strnequ	output/ft_printf/ftp_strnequ.c	/^int		ftp_strnequ(const char *s1, const char *s2, size_t n)$/;"	f
ftp_toupper	output/ft_printf/ftp_toupper.c	/^int		ftp_toupper(int c)$/;"	f
get_next_line	strings/get_next_line.c	/^int			get_next_line(const int fd, char **line)$/;"	f
inner_gnl	strings/get_next_line.c	/^static int	inner_gnl(int fd, long int *ret, char **remain, char **buffer)$/;"	f	file:
is_special	conversion/ft_atoi.c	/^static int	is_special(char c)$/;"	f	file:
is_special_char	strings/ft_strtrim.c	/^static int	is_special_char(char c)$/;"	f	file:
mng_nullarg	output/ft_printf/mng_nullarg.c	/^void		mng_nullarg(t_env *env)$/;"	f
